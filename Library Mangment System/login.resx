<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="label3.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>